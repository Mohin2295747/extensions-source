name: Build Hanime1 Extension

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: -Dorg.gradle.parallel=false -Dkotlinx.serialization.opt-in=kotlinx.serialization.ExperimentalSerializationApi

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Verify project structure
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          ls -la src/zh/

      - name: Build hanime1 extension
        run: |
          chmod +x ./gradlew
          # Try different project path formats
          ./gradlew :zh:hanime1:assembleDebug || \
          ./gradlew :src:zh:hanime1:assembleDebug || \
          ./gradlew :extensions-source:src:zh:hanime1:assembleDebug

      - name: Find and upload APK
        run: |
          # Search in possible output locations
          APK_PATH=$(find . -path "*/zh/hanime1/*/debug/*.apk" -o \
                       -path "*/src/zh/hanime1/*/debug/*.apk" -o \
                       -path "*/extensions-source/src/zh/hanime1/*/debug/*.apk" | head -1)
          if [ -z "$APK_PATH" ]; then
            echo "APK not found! Searching all locations:"
            find . -name "*.apk"
            exit 1
          fi
          echo "APK found at: $APK_PATH"
          cp "$APK_PATH" hanime1-debug.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: hanime1-extension
          path: hanime1-debug.apk
          retention-days: 1
